<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/tx
	    http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置业务层-->
    <bean id="accountService" class="com.yang.service.impl.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"></property>
    </bean>

    <!--配置账户的持久层-->
    <bean id="accountDao" class="com.yang.dao.impl.AccountDaoImpl">
        <property name="dataSource" ref="dataSource"></property>
    </bean>


    <!--配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql:///ssm?zeroDateTimeBehavior=convertToNull&amp;serverTimezone=GMT%2b8"></property>
        <property name="username" value="root"></property>
        <property name="password" value="123456"></property>
    </bean>

    <!--Spring 中基于XML的声明式事务控制配置步骤
        1. 配置事务管理器
        2. 配置事务的通知，需要导入事务的约束 tx和aop的名称空间和约束
            使用<tx:advice>标签配置事务通知
             属性：
                id：给事务管理器取一个唯一标志
                transaction-manager：给事务通知提供一个事务管理器引用
        3. 配置 AOP 中的通用切入点表达式
        4. 建立事务通知和切入点表达式的对应关系
        5. 配置事务的属性
            在事务的通知<tx:advice>标签的内部进行配置
    -->
    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--配置事务的通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--配置事务的属性
            isolation：用于指定事务的隔离级别，默认值DEFAULT，表示使用数据库的隔离级别
            propagation：用于指定事务的传播行为，默认值REQUIRED，表示一定会有事务，增删改的选择，查询方法可以选择SUPPORTS
            read-only：用于指定事务是否只读。只有查询方法才能设置为true。默认值是false，表示读写
            timeout：用于指定事务的超时时间，默认值是-1，表示永不超时。如果指定了数值，以秒为单位
            rollback-for：用于指定一个异常，当产生该异常时，事务回滚，产生其他异常时，事务不会滚。没有默认值，表示任何异常都回滚。
            no-rollback-for：用于指定一个异常，当产生该异常时，事务不会滚，产生其他异常时，事务回滚。没有默认值，表示任何异常都回滚。
        -->
        <tx:attributes>
            <tx:method name="transfer" propagation="REQUIRED" read-only="false"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--配置AOP-->
    <aop:config>
        <!--配置切入点表达式-->
        <aop:pointcut id="pt1" expression="execution(* com.yang.service.impl.*.*(..))"/>
        <!--建立切入点和事务通知的对应关系-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"/>
    </aop:config>
</beans>